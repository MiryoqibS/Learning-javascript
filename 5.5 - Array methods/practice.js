/*
== –ó–∞–¥–∞–Ω–∏–µ 1 —Å —Å–∞–π—Ç–∞ ==
–ü–µ—Ä–µ–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –≤–∏–¥–∞ border-left-width –≤ borderLeftWidth
–ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é camelize(str), –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Å—Ç—Ä–æ–∫–∏ –≤–∏–¥–∞ ¬´my-short-string¬ª –≤ ¬´myShortString¬ª.

–¢–æ –µ—Å—Ç—å –¥–µ—Ñ–∏—Å—ã —É–¥–∞–ª—è—é—Ç—Å—è, –∞ –≤—Å–µ —Å–ª–æ–≤–∞ –ø–æ—Å–ª–µ –Ω–∏—Ö –ø–æ–ª—É—á–∞—é—Ç –∑–∞–≥–ª–∞–≤–Ω—É—é –±—É–∫–≤—É.

camelize("background-color") == 'backgroundColor';
camelize("list-style-image") == 'listStyleImage';
camelize("-webkit-transition") == 'WebkitTransition';
P.S. –ü–æ–¥—Å–∫–∞–∑–∫–∞: –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ split, —á—Ç–æ–±—ã —Ä–∞–∑–±–∏—Ç—å —Å—Ç—Ä–æ–∫—É –Ω–∞ –º–∞—Å—Å–∏–≤ —Å–∏–º–≤–æ–ª–æ–≤, –ø–æ—Ç–æ–º –ø–µ—Ä–µ–¥–µ–ª–∞–π—Ç–µ –≤—Å—ë –∫–∞–∫ –Ω—É–∂–Ω–æ –∏ –º–µ—Ç–æ–¥–æ–º join —Å–æ–µ–¥–∏–Ω–∏—Ç–µ –æ–±—Ä–∞—Ç–Ω–æ.
*/

const camelize = (str = "") => {
    return str.split("-").map((word, index) => index === 0 ?
        word.toLowerCase() :
        word[0].toUpperCase() + word.slice(1).toLowerCase())
        .join("");
};

console.log(camelize("background-color"));
console.log(camelize("list-style-image"));
console.log(camelize("-webkit-transition"));

/*
== –ó–∞–¥–∞–Ω–∏–µ 2 —Å —Å–∞–π—Ç–∞ ==
–§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –¥–∏–∞–ø–∞–∑–æ–Ω—É
–ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é filterRange(arr, a, b), –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –º–∞—Å—Å–∏–≤ arr, –∏—â–µ—Ç —ç–ª–µ–º–µ–Ω—Ç—ã —Å–æ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ –±–æ–ª—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω—ã–º–∏ a –∏ –º–µ–Ω—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω—ã–º–∏ b –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –≤–∏–¥–µ –º–∞—Å—Å–∏–≤–∞.

–§—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ –∏ –Ω–µ –∏–∑–º–µ–Ω—è—Ç—å –∏—Å—Ö–æ–¥–Ω—ã–π.

let arr = [5, 3, 8, 1];
let filtered = filterRange(arr, 1, 4);
alert( filtered ); // 3,1 (—Å–æ–≤–ø–∞–¥–∞—é—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è)
alert( arr ); // 5,3,8,1 (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
*/

const filterRange = (arr, a, b) => {
    return arr.filter((number) => number >= a && number <= b);
};

console.log(filterRange([5, 3, 8, 1], 1, 4));

/*
== –ó–∞–¥–∞–Ω–∏–µ 3 —Å —Å–∞–π—Ç–∞ ==
–§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –¥–∏–∞–ø–∞–∑–æ–Ω—É "–Ω–∞ –º–µ—Å—Ç–µ"
–ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é filterRangeInPlace(arr, a, b), –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –º–∞—Å—Å–∏–≤ arr –∏ —É–¥–∞–ª—è–µ—Ç –∏–∑ –Ω–µ–≥–æ –≤—Å–µ –∑–Ω–∞—á–µ–Ω–∏—è –∫—Ä–æ–º–µ —Ç–µ—Ö, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –º–µ–∂–¥—É a –∏ b. –¢–æ –µ—Å—Ç—å, –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–µ–µ—Ç –≤–∏–¥ a ‚â§ arr[i] ‚â§ b.

–§—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –∏–∑–º–µ–Ω—è—Ç—å –ø—Ä–∏–Ω–∏–º–∞–µ–º—ã–π –º–∞—Å—Å–∏–≤ –∏ –Ω–∏—á–µ–≥–æ –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å.

–ù–∞–ø—Ä–∏–º–µ—Ä:

let arr = [5, 3, 8, 1];
filterRangeInPlace(arr, 1, 4); // —É–¥–∞–ª–µ–Ω—ã —á–∏—Å–ª–∞ –≤–Ω–µ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ 1..4
alert( arr ); // [3, 1]
*/

const filterRangeInPlace = (arr, a, b) => {
    arr.forEach((number, index) => {
        if (a <= number <= b) {
            arr.splice(index, 1);
        };
    });
};

let arr = [5, 3, 8, 1, 3, 2];
filterRangeInPlace(arr, 1, 4);
console.log(arr);

/*
== –ó–∞–¥–∞–Ω–∏–µ 4 —Å —Å–∞–π—Ç–∞ ==
–°–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ –ø–æ—Ä—è–¥–∫–µ –ø–æ —É–±—ã–≤–∞–Ω–∏—é
let arr = [5, 2, 1, -10, 8];

alert( arr ); // 8, 5, 2, 1, -10
*/

const sortDecrease = (arr) => {
    return arr.sort((a, b) => b - a);
};

console.log(sortDecrease([5, 2, 1, -10, 8]));

/*
== –ó–∞–¥–∞–Ω–∏–µ 5 —Å —Å–∞–π—Ç–∞ ==
–°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∏ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –º–∞—Å—Å–∏–≤
–£ –Ω–∞—Å –µ—Å—Ç—å –º–∞—Å—Å–∏–≤ —Å—Ç—Ä–æ–∫ arr. –ù—É–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—É—é –∫–æ–ø–∏—é, –Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å arr –Ω–µ–∏–∑–º–µ–Ω—ë–Ω–Ω—ã–º.

–°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é copySorted(arr), –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å —Ç–∞–∫—É—é –∫–æ–ø–∏—é.

let arr = ["HTML", "JavaScript", "CSS"];

let sorted = copySorted(arr);

alert( sorted ); // CSS, HTML, JavaScript
alert( arr ); // HTML, JavaScript, CSS (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
*/

const copySorted = (arr) => {
    return [...arr].sort();
};

let skills = ["HTML", "JavaScript", "CSS"];

let sorted = copySorted(skills);

console.log(skills);
console.log(sorted);

/*
== –ó–∞–¥–∞–Ω–∏–µ 6 —Å —Å–∞–π—Ç–∞ ==
–°–æ–∑–¥–∞—Ç—å —Ä–∞—Å—à–∏—Ä—è–µ–º—ã–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä
–°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä Calculator, –∫–æ—Ç–æ—Ä–∞—è —Å–æ–∑–¥–∞—ë—Ç ¬´—Ä–∞—Å—à–∏—Ä—è–µ–º—ã–µ¬ª –æ–±—ä–µ–∫—Ç—ã –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞.

–ó–∞–¥–∞–Ω–∏–µ —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ –¥–≤—É—Ö —á–∞—Å—Ç–µ–π.
–í–æ-–ø–µ—Ä–≤—ã—Ö, —Ä–µ–∞–ª–∏–∑—É–π—Ç–µ –º–µ—Ç–æ–¥ calculate(str), –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å—Ç—Ä–æ–∫—É —Ç–∏–ø–∞ "1 + 2" –≤ —Ñ–æ—Ä–º–∞—Ç–µ ¬´–ß–ò–°–õ–û –æ–ø–µ—Ä–∞—Ç–æ—Ä –ß–ò–°–õ–û¬ª (—Ä–∞–∑–¥–µ–ª–µ–Ω–æ –ø—Ä–æ–±–µ–ª–∞–º–∏) –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç. –ú–µ—Ç–æ–¥ –¥–æ–ª–∂–µ–Ω –ø–æ–Ω–∏–º–∞—Ç—å –ø–ª—é—Å + –∏ –º–∏–Ω—É—Å -.
–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
let calc = new Calculator;
alert( calc.calculate("3 + 7") ); // 10
–ó–∞—Ç–µ–º –¥–æ–±–∞–≤—å—Ç–µ –º–µ—Ç–æ–¥ addMethod(name, func), –∫–æ—Ç–æ—Ä—ã–π –¥–æ–±–∞–≤–ª—è–µ—Ç –≤ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –Ω–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏. –û–Ω –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –æ–ø–µ—Ä–∞—Ç–æ—Ä name –∏ —Ñ—É–Ω–∫—Ü–∏—é —Å –¥–≤—É–º—è –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏ func(a,b), –∫–æ—Ç–æ—Ä–∞—è –æ–ø–∏—Å—ã–≤–∞–µ—Ç –µ–≥–æ.
–ù–∞–ø—Ä–∏–º–µ—Ä, –¥–∞–≤–∞–π—Ç–µ –¥–æ–±–∞–≤–∏–º —É–º–Ω–æ–∂–µ–Ω–∏–µ *, –¥–µ–ª–µ–Ω–∏–µ / –∏ –≤–æ–∑–≤–µ–¥–µ–Ω–∏–µ –≤ —Å—Ç–µ–ø–µ–Ω—å **:
let powerCalc = new Calculator;
powerCalc.addMethod("*", (a, b) => a * b);
powerCalc.addMethod("/", (a, b) => a / b);
powerCalc.addMethod("**", (a, b) => a ** b);
let result = powerCalc.calculate("2 ** 3");
alert( result ); // 8
–î–ª—è —ç—Ç–æ–π –∑–∞–¥–∞—á–∏ –Ω–µ –Ω—É–∂–Ω—ã —Å–∫–æ–±–∫–∏ –∏–ª–∏ —Å–ª–æ–∂–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è.
–ß–∏—Å–ª–∞ –∏ –æ–ø–µ—Ä–∞—Ç–æ—Ä —Ä–∞–∑–¥–µ–ª–µ–Ω—ã —Ä–æ–≤–Ω–æ –æ–¥–Ω–∏–º –ø—Ä–æ–±–µ–ª–æ–º.
–ù–µ –ª–∏—à–Ω–∏–º –±—É–¥–µ—Ç –¥–æ–±–∞–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–æ–∫.
*/

function Calculator() {
    this.methods = {
        "+": (a, b) => a + b,
    };

    this.calculate = function (str) {
        let split = str.split(" ");
        let a = Number(split[0]);
        let operator = split[1];
        let b = Number(split[2]);

        if (!this.methods[operator] || isNaN(a) || isNaN(b)) return NaN;

        return (this.methods[operator](a, b)).toFixed(2)
    };

    this.addMethod = function(operator, func) {
        this.methods[operator] = func;
    };
};

let powerCalc = new Calculator;
powerCalc.addMethod("*", (a, b) => a * b);
powerCalc.addMethod("-", (a, b) => a - b);
powerCalc.addMethod("/", (a, b) => a / b);
powerCalc.addMethod("**", (a, b) => a ** b);
console.log(powerCalc.calculate("1 + 2"));
console.log(powerCalc.calculate("15 + 23"));
console.log(powerCalc.calculate("15 - 23"));
console.log(powerCalc.calculate("15 ** 2"));
console.log(powerCalc.calculate("15 / 23"));


/*
== –ó–∞–¥–∞–Ω–∏–µ 7 —Å —Å–∞–π—Ç–∞ ==
–¢—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –≤ –º–∞—Å—Å–∏–≤ –∏–º—ë–Ω
–£ –≤–∞—Å –µ—Å—Ç—å –º–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤ user, –∏ –≤ –∫–∞–∂–¥–æ–º –∏–∑ –Ω–∏—Ö –µ—Å—Ç—å user.name. –ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –∏—Ö –≤ –º–∞—Å—Å–∏–≤ –∏–º—ë–Ω.

–ù–∞–ø—Ä–∏–º–µ—Ä:

let vasya = { name: "–í–∞—Å—è", age: 25 };
let petya = { name: "–ü–µ—Ç—è", age: 30 };
let masha = { name: "–ú–∞—à–∞", age: 28 };

let users = [ vasya, petya, masha ];

let names = // ... –≤–∞—à –∫–æ–¥ 

alert( names ); // –í–∞—Å—è, –ü–µ—Ç—è, –ú–∞—à–∞
*/

// –Ø —Å–¥–µ–ª–∞–ª friend –º–∞—Å—Å–∏–≤ –ø–æ—Ç–æ–º—É-—á—Ç–æ users –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ –∫–æ–¥–µ
let friends = [
    {
        name: "–í–∞—Å—è",
        age: 25,
    }, 
    {
        name: "–ú–∞—à–∞",
        age: 19,
    },
    {
        name: "–ö–∞—Ç—è",
        age: 22,
    },
    {
        name: "–ü–µ—Ç—è",
        age: 35,
    },
];

let names = friends.map(({ name }) => name);

console.log(names);


/*
== –ó–∞–¥–∞–Ω–∏–µ 1 –æ—Ç ChatGpt ==
üîÅ forEach
–ó–∞–¥–∞–Ω–∏–µ:
–£ —Ç–µ–±—è –µ—Å—Ç—å –º–∞—Å—Å–∏–≤ –∑–∞–∫–∞–∑–æ–≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–∞, –∫–∞–∂–¥—ã–π –∑–∞–∫–∞–∑ ‚Äî –æ–±—ä–µ–∫—Ç —Å –ø–æ–ª—è–º–∏ id, user, total, delivered. –ò—Å–ø–æ–ª—å–∑—É—è forEach, –≤—ã–≤–µ–¥–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∫–∞–∂–¥–æ–º –∑–∞–∫–∞–∑–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:
–ó–∞–∫–∞–∑ #ID –¥–ª—è USER –Ω–∞ —Å—É–º–º—É TOTAL‚ÇΩ ‚Äî –¥–æ—Å—Ç–∞–≤–ª–µ–Ω/–≤ –ø—É—Ç–∏.
*/

const orders = [
    {
        id: 1,
        user: "Miryoqib",
        total: 2300,
        delivered: false,
    },
    {
        id: 2,
        user: "Nodir",
        total: 9500,
        delivered: false,
    },
    {
        id: 3,
        user: "–ê—Ä—Ç—ë–º",
        total: 1500,
        delivered: false,
    },
    {
        id: 4,
        user: "–í–æ–≤–∞",
        total: 5500,
        delivered: false,
    },
]

orders.forEach((order) => {
    console.log(`–ó–∞–∫–∞–∑ ü™™  #${order.id} –¥–ª—è ${order.user} –Ω–∞ —Å—É–º–º—É: üí≤${order.total} —Ä—É–±–ª–µ–π - ${order.delivered ? "–¥–æ—Å—Ç–∞–≤–ª–µ–Ω üöö" : "–≤ –ø—É—Ç–∏ üì¶"}`);
})


/*
== –ó–∞–¥–∞–Ω–∏–µ 2 –æ—Ç ChatGpt ==
üß† map
–ó–∞–¥–∞–Ω–∏–µ:
–ú–∞—Å—Å–∏–≤ —É—á–µ–Ω–∏–∫–æ–≤ —à–∫–æ–ª—ã, —É –∫–∞–∂–¥–æ–≥–æ –µ—Å—Ç—å name –∏ grades (–º–∞—Å—Å–∏–≤ –æ—Ü–µ–Ω–æ–∫). –° –ø–æ–º–æ—â—å—é map —Å–æ–∑–¥–∞–π –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤, –≥–¥–µ –∫–∞–∂–¥–æ–º—É —É—á–µ–Ω–∏–∫—É –¥–æ–±–∞–≤–ª–µ–Ω averageGrade.
*/

const students = [
    {
        name: "Miryoqib",
        grades: [5, 5, 5, 5, 4, 4, 5, 4, 5, 3],
    },
    {
        name: "Nodir",
        grades: [3, 3, 3, 3, 5, 3, 3, 5, 4],
    },
    {
        name: "–ü–µ—Ç—è",
        grades: [2, 3, 4, 5, 5, 4, 3, 2, 3, 5],
    },
    {
        name: "–¢–æ–ª–∏–∫",
        grades: [5, 5, 5, 5, 4.5, 5, 3, 5],
    },
]

const studentsUpdated = students.map((student) => {
    return {
        name: student.name,
        grades: student.grades,
        averageGrade: Math.round(student.grades.reduce((accumulator, res) => { return res += accumulator }) / student.grades.length),
    }
});


/*
== –ó–∞–¥–∞–Ω–∏–µ 3 –æ—Ç ChatGpt ==
üìã filter
–ó–∞–¥–∞–Ω–∏–µ:
–£ —Ç–µ–±—è –º–∞—Å—Å–∏–≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ —Å–æ—Ü—Å–µ—Ç–∏. –£ –∫–∞–∂–¥–æ–≥–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –µ—Å—Ç—å text –∏ banned (boolean). –í–µ—Ä–Ω–∏ —Ç–æ–ª—å–∫–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏, –Ω–µ –ø–æ–º–µ—á–µ–Ω–Ω—ã–µ –∫–∞–∫ banned.
*/

const comments = [
    {
        text: "–Ø –ø–µ—Ä–≤—ã–π!",
        banned: false,
    },
    {
        text: "–î–∞ —Ç—ã –ø—Ä–æ—Å—Ç–æ ***!",
        banned: true,
    },
    {
        text: "–ê –∫–æ–≥–¥–∞ –Ω–æ–≤—ã–π –≤–∏–¥–æ—Å?",
        banned: false,
    },
    {
        text: "–ï–≥–æ –Ω–æ–º–µ—Ä: +7 777 77 77",
        banned: true,
    },
    {
        text: "–ü—Ä–æ—Å—Ç–æ ***** –∫–æ–Ω—Ç–µ–Ω—Ç",
        banned: true,
    },
]

const commentsFiltered = comments.filter((comment) => {
    return comment.banned === false;
})

console.log(commentsFiltered);

/*
== –ó–∞–¥–∞–Ω–∏–µ 4 –æ—Ç ChatGpt ==
üîç find
–ó–∞–¥–∞–Ω–∏–µ:
–ú–∞—Å—Å–∏–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å loginAttempts. –ù–∞–π–¥–∏ –ø–µ—Ä–≤–æ–≥–æ, —É –∫–æ–≥–æ loginAttempts > 5.
*/

const users = [
    {
        login: "Miryoqib",
        loginAttempts: 4,
    },
    {
        login: "Nodir",
        loginAttempts: 69,
    },
    {
        login: "–°–∞–º–∏—Ä",
        loginAttempts: 1,
    },
    {
        login: "–í–∞–Ω—è",
        loginAttempts: 2,
    },
    {
        login: "–ò–≥–æ—Ä—å",
        loginAttempts: 6,
    },
];

const usersFind = users.find((user) => {
    return user.loginAttempts > 5;
});


/*
== –ó–∞–¥–∞–Ω–∏–µ 5 –æ—Ç ChatGpt ==
üß± reduce
–ó–∞–¥–∞–Ω–∏–µ:
–ú–∞—Å—Å–∏–≤ –ø–æ–∫—É–ø–æ–∫, –∫–∞–∂–¥–∞—è —Å price –∏ quantity. –°—á–∏—Ç–∞–π –æ–±—â—É—é —Å—É–º–º—É –≤—Å–µ—Ö –ø–æ–∫—É–ø–æ–∫.
*/

const buys = [
    {
        price: 300,
        quantity: 4,
    },
    {
        price: 356,
        quantity: 6,
    },
    {
        price: 99.99,
        quantity: 2,
    },
    {
        price: 1200,
        quantity: 1,
    },
    {
        price: 55000,
        quantity: 1,
    },
]

let sum = buys.reduce((res, elem) => {
    return res += Math.round((elem.price * elem.quantity * 10) / 10);
}, 0)

console.log(`–°—É–º–º–∞ –≤—Å–µ—Ö –ø–æ–∫—É–ø–æ–∫: ${sum} —Ä—É–±–ª–µ–π`);


/*
== –ó–∞–¥–∞–Ω–∏–µ 6 –æ—Ç ChatGpt ==
üîÑ reverse
–ó–∞–¥–∞–Ω–∏–µ:
–†–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–π —Å–æ–æ–±—â–µ–Ω–∏—è —á–∞—Ç–∞ (–º–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤ —Å message –∏ timestamp) —Ç–∞–∫, —á—Ç–æ–±—ã –ø–æ—Å–ª–µ–¥–Ω–∏–µ —à–ª–∏ –ø–µ—Ä–≤—ã–º–∏.
*/

const messages = [
    {
        message: "–ü—Ä–∏–≤–µ—Ç, –∫–∞–∫ —Ç—ã ?",
        timestamp: 1555000,
    },
    {
        message: "–ü—Ä–∏–≤–µ—Ç!",
        timestamp: 1555005,
    },
    {
        message: "–ù–æ—Ä–º–∞–ª—å–Ω–æ –∞ —Ç—ã –∫–∞–∫?",
        timestamp: 1555010,
    },
    {
        message: "–ö–∞–∫ —Ç—ã?",
        timestamp: 15550015,
    },
    {
        message: "–ì—É–¥",
        timestamp: 1555025,
    },
];

console.log(messages.reverse());

/*
== –ó–∞–¥–∞–Ω–∏–µ 6 –æ—Ç ChatGpt ==
üî¢ sort
–ó–∞–¥–∞–Ω–∏–µ:
–û—Ç—Å–æ—Ä—Ç–∏—Ä—É–π –º–∞—Å—Å–∏–≤ –∑–∞–∫–∞–∑–æ–≤ –ø–æ —Å—É–º–º–µ –∑–∞–∫–∞–∑–∞ (total), –æ—Ç –±–æ–ª—å—à–µ–≥–æ –∫ –º–µ–Ω—å—à–µ–º—É.
*/

orders.sort((a, b) => { a.total - b.total; });

console.log(orders);


/*
== –ó–∞–¥–∞–Ω–∏–µ 7 –æ—Ç ChatGpt ==
üìê slice
–ó–∞–¥–∞–Ω–∏–µ:
–ü–æ–∫–∞–∂–∏ –ø–µ—Ä–≤—ã–µ 5 –ø–æ—Å—Ç–æ–≤ –±–ª–æ–≥–∞ –∏–∑ –º–∞—Å—Å–∏–≤–∞ posts, –Ω–µ –º–µ–Ω—è—è –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –º–∞—Å—Å–∏–≤.
*/

const posts = [
    {
        title: "–ò–∑—É—á–∞—é Javascript!"
    },
    {
        title: "–ü–æ–º—ã–ª –ø–æ—Å—É–¥—É!"
    },
    {
        title: "–ü—Ä–∏—à—ë–ª —Å–æ —à–∫–æ–ª—ã!"
    },
    {
        title: "–ù–∞–ø–∏—Å–∞–ª —Å–≤–æ–π TodoApp!"
    },
    {
        title: "–ò–∑—É—á–∞—é NodeJs!"
    },
    {
        title: "–°–¥–µ–ª–∞–ª –∫–æ–º–º–∏—Ç!"
    },
];

const fifthPosts = posts.slice(0, 5);
console.log(fifthPosts);

/*
== –ó–∞–¥–∞–Ω–∏–µ 8 –æ—Ç ChatGpt ==
üß© splice
–ó–∞–¥–∞–Ω–∏–µ:
–£–¥–∞–ª–∏ –≤—Å–µ —Ç–æ–≤–∞—Ä—ã —Å–æ —Å–∫–∏–¥–∫–æ–π –º–µ–Ω—å—à–µ 10% –∏–∑ –º–∞—Å—Å–∏–≤–∞ —Ç–æ–≤–∞—Ä–æ–≤, –∏—Å–ø–æ–ª—å–∑—É–π splice.
*/

const products = [
    {
        discount: 15,
    },
    {
        discount: 19,
    },
    {
        discount: 5,
    },
    {
        discount: 9,
    },
];

for (let i = products.length - 1; i >= 0; i--) {
    if (products[i].discount <= 10) {
        products.splice(i, 1);
    };
};

console.log(products);

/*
== –ó–∞–¥–∞–Ω–∏–µ 9 –æ—Ç ChatGpt ==
‚ûï concat
–ó–∞–¥–∞–Ω–∏–µ:
–û–±—ä–µ–¥–∏–Ω–∏ –¥–≤–∞ –º–∞—Å—Å–∏–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ —Ä–∞–∑–Ω—ã—Ö –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö.
*/

const dbUsers1 = [
    { id: 1, name: "Alice" },
    { id: 2, name: "Bob" }
];

const dbUsers2 = [
    { id: 3, name: "Charlie" },
    { id: 4, name: "Diana" }
];

const allUsers = dbUsers1.concat(dbUsers2);
console.log(allUsers);

/*
== –ó–∞–¥–∞–Ω–∏–µ 10 –æ—Ç ChatGpt ==
üîé includes
–ó–∞–¥–∞–Ω–∏–µ:
–ü—Ä–æ–≤–µ—Ä—å, –µ—Å—Ç—å –ª–∏ –≤ –º–∞—Å—Å–∏–≤–µ —Ä–∞–∑—Ä–µ—à—ë–Ω–Ω—ã—Ö —Ä–æ–ª–µ–π –∑–Ω–∞—á–µ–Ω–∏–µ 'admin'.
*/

const allowedRoles = ['user', 'editor', 'admin'];

const hasAdmin = allowedRoles.includes('admin');
console.log(hasAdmin);


/*
== –ó–∞–¥–∞–Ω–∏–µ 11 –æ—Ç ChatGpt ==
üß™ some –∏ every
–ó–∞–¥–∞–Ω–∏–µ:
some: –ü—Ä–æ–≤–µ—Ä—å, –µ—Å—Ç—å –ª–∏ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ–Ω–ª–∞–π–Ω.
every: –í—Å–µ –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª–∏ email?
*/

const users2 = [
    { name: 'Alice', online: false, emailConfirmed: true },
    { name: 'Bob', online: true, emailConfirmed: true },
    { name: 'Charlie', online: false, emailConfirmed: true }
];

const isSomeoneOnline = users2.some(user => user.online);
console.log(isSomeoneOnline);

const allEmailsConfirmed = users2.every(user => user.emailConfirmed);
console.log(allEmailsConfirmed); 
