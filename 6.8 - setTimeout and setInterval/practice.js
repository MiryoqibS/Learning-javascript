/*
== –ó–∞–¥–∞–Ω–∏–µ 1 —Å —Å–∞–π—Ç–∞ ==
–í—ã–≤–æ–¥ –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É
–ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é printNumbers(from, to), –∫–æ—Ç–æ—Ä–∞—è –≤—ã–≤–æ–¥–∏—Ç —á–∏—Å–ª–æ –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É, –Ω–∞—á–∏–Ω–∞—è –æ—Ç from –∏ –∑–∞–∫–∞–Ω—á–∏–≤–∞—è to.

–°–¥–µ–ª–∞–π—Ç–µ –¥–≤–∞ –≤–∞—Ä–∏–∞–Ω—Ç–∞ —Ä–µ—à–µ–Ω–∏—è.

–ò—Å–ø–æ–ª—å–∑—É—è setInterval.
–ò—Å–ø–æ–ª—å–∑—É—è —Ä–µ–∫—É—Ä—Å–∏–≤–Ω—ã–π setTimeout.
*/

// –ò—Å–ø–æ–ª—å–∑—É—è setInterval.
const printNumbers = (from, to) => {
    let intervalId = setInterval(() => {
        console.log(from);

        if (from >= to) {
            clearInterval(intervalId);
        };

        from++;
    }, 1000);
};


// –ò—Å–ø–æ–ª—å–∑—É—è —Ä–µ–∫—É—Ä—Å–∏–≤–Ω—ã–π setTimeout

const printNumbers2 = (from, to) => {
    let current = from;

    setTimeout(function tick() {
        console.log(current);

        if (current < to) {
            setTimeout(tick, 1000)
        }

        current++;
    }, 1000);
};

/*
== –ó–∞–¥–∞–Ω–∏–µ 2 —Å —Å–∞–π—Ç–∞ ==
–ß—Ç–æ –ø–æ–∫–∞–∂–µ—Ç setTimeout?
–í –ø—Ä–∏–≤–µ–¥—ë–Ω–Ω–æ–º –Ω–∏–∂–µ –∫–æ–¥–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω –≤—ã–∑–æ–≤ setTimeout, –∞ –∑–∞—Ç–µ–º –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Å–ª–æ–∂–Ω–æ–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏–µ, –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∫–æ—Ç–æ—Ä–æ–≥–æ —Ç—Ä–µ–±—É–µ—Ç—Å—è –±–æ–ª–µ–µ 100 –º—Å.

–ö–æ–≥–¥–∞ –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è?

–ü–æ—Å–ª–µ —Ü–∏–∫–ª–∞.
–ü–µ—Ä–µ–¥ —Ü–∏–∫–ª–æ–º.
–í –Ω–∞—á–∞–ª–µ —Ü–∏–∫–ª–∞.
–ß—Ç–æ –ø–æ–∫–∞–∂–µ—Ç alert?

let i = 0;

setTimeout(() => alert(i), 100); // ?

// –ø—Ä–µ–¥–ø–æ–ª–æ–∂–∏–º, —á—Ç–æ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ >100 –º—Å
for(let j = 0; j < 100000000; j++) {
    i++;
}
*/


let i = 0;

setTimeout(() => console.log(i), 100); // 100000000 –ø–æ—Å–ª–µ —Ü–∏–∫–ª–∞

// –ø—Ä–µ–¥–ø–æ–ª–æ–∂–∏–º, —á—Ç–æ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ >100 –º—Å
for (let j = 0; j < 100000000; j++) {
    i++;
};

/*
== –ó–∞–¥–∞–Ω–∏–µ 1 –æ—Ç ChatGPT ==
–¢–∞–π–º–µ—Ä –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –æ—Ç—Å—á—ë—Ç–∞
üìù –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é countDown(seconds), –∫–æ—Ç–æ—Ä–∞—è –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É –≤—ã–≤–æ–¥–∏—Ç —á–∏—Å–ª–æ —Å–µ–∫—É–Ω–¥ –¥–æ –Ω—É–ª—è, –∞ –≤ –∫–æ–Ω—Ü–µ –ø–∏—à–µ—Ç: Time's up!
*/

const countDown = (seconds) => {
    let timerId = setInterval(() => {
        console.log(seconds);

        if (seconds <= 0) {
            clearInterval(timerId);
        };

        seconds--;
    }, 1000)
};

/*
== –ó–∞–¥–∞–Ω–∏–µ 2 –æ—Ç ChatGPT ==
–†–µ–∫—É—Ä—Å–∏–≤–Ω—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª

üìù –°–¥–µ–ª–∞–π —Ç–æ –∂–µ —Å–∞–º–æ–µ, —á—Ç–æ –≤ –ø–µ—Ä–≤–æ–º –∑–∞–¥–∞–Ω–∏–∏, –Ω–æ —á–µ—Ä–µ–∑ —Ä–µ–∫—É—Ä—Å–∏–≤–Ω—ã–π setTimeout.
*/

const countDown2 = (seconds) => {
    setTimeout(function start() {
        console.log(seconds);

        if (seconds >= 1) {
            setTimeout(start, 1000);
        };

    }, 1000);
};

/*
== –ó–∞–¥–∞–Ω–∏–µ 3 –æ—Ç ChatGPT ==
10 —Å–µ–∫—É–Ω–¥ —Ç–∏—à–∏–Ω—ã

üìù –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥ –ø–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞ –ø–∏—à–µ—Ç –≤ –∫–æ–Ω—Å–æ–ª—å:
10 —Å–µ–∫—É–Ω–¥ –ø—Ä–æ—à–ª–æ. –í—Å—ë –µ—â—ë —Ç—É—Ç?
*/

const silence = () => {
    setTimeout(() => {
        console.log("10 —Å–µ–∫—É–Ω–¥ –ø—Ä–æ—à–ª–æ. –í—Å—ë –µ—â—ë —Ç—É—Ç?");
    }, 10000)
};

/*
== –ó–∞–¥–∞–Ω–∏–µ 4 –æ—Ç ChatGPT ==
—É–º–Ω—ã–π —Å—á—ë—Ç—á–∏–∫

üìù –°–¥–µ–ª–∞–π —Ñ—É–Ω–∫—Ü–∏—é smartCounter(from, to, delay, step) ‚Äî –æ–Ω–∞ –±—É–¥–µ—Ç:

–Ω–∞—á–∏–Ω–∞—Ç—å —Å from

—É–≤–µ–ª–∏—á–∏–≤–∞—Ç—å—Å—è –Ω–∞ step

–∫–∞–∂–¥—ã–µ delay –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥

–ø–æ–∫–∞ –Ω–µ –¥–æ–π–¥—ë—Ç –¥–æ to –∏–ª–∏ –±–æ–ª—å—à–µ

–ü—Ä–∏–º–µ—Ä –≤—ã–∑–æ–≤–∞:

smartCounter(10, 25, 500, 5);
–û–∂–∏–¥–∞–µ–º—ã–π –≤—ã–≤–æ–¥:

10  
15  
20  
25
üìå –ò—Å–ø–æ–ª—å–∑—É–π setInterval –∏–ª–∏ setTimeout ‚Äî –Ω–∞ —Ç–≤–æ–π –≤—ã–±–æ—Ä
üìå –£–±–µ–¥–∏—Å—å, —á—Ç–æ –≤—ã–≤–æ–¥ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –≤–æ–≤—Ä–µ–º—è
*/

// –° –ø–æ–º–æ—â—å—é setInterval
const smartCounter = (from, to, delay, step) => {
    let counterId = setInterval(() => {
        console.log(from);

        if (from < to) {
            from += step;
        } else {
            clearInterval(counterId);
        }
    }, delay)
};


// –° –ø–æ–º–æ—â—å—é setTimeout
const smartCounter2 = (from, to, delay, step) => {
    setTimeout(function start() {
        console.log(from);
        
        if (from < to) {
            from += step;
            setTimeout(start, delay);
        };

    }, delay)
};
